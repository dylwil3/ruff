---
source: crates/ruff_python_semantic/src/cfg/mod.rs
description: "This is a Mermaid graph. You can use https://mermaid.live to visualize it as a diagram."
---
## Function 0
### Source
```python
def func():
    assert True
```

### Control Flow Graph
```mermaid
flowchart TD
	node0["assert True"]
	node1((("EXIT")))
	node0==>node1
```

## Function 1
### Source
```python
def func():
    assert False
```

### Control Flow Graph
```mermaid
flowchart TD
	node0["assert False"]
	node1((("EXIT")))
	node0==>node1
```

## Function 2
### Source
```python
def func():
    assert True, "oops"
```

### Control Flow Graph
```mermaid
flowchart TD
	node0["assert True, #quot;oops#quot;"]
	node1((("EXIT")))
	node0==>node1
```

## Function 3
### Source
```python
def func():
    assert False, "oops"
```

### Control Flow Graph
```mermaid
flowchart TD
	node0["assert False, #quot;oops#quot;"]
	node1((("EXIT")))
	node0==>node1
```

## Function 4
### Source
```python
def func():
    y = 2
    assert y == 2
    assert y > 1
    assert y < 3
```

### Control Flow Graph
```mermaid
flowchart TD
	node0["y = 2
assert y == 2
assert y > 1
assert y < 3"]
	node1((("EXIT")))
	node0==>node1
```

## Function 5
### Source
```python
def func():
    for i in range(3):
        assert i < x
```

### Control Flow Graph
```mermaid
flowchart TD
	node0["EMPTY"]
	node1((("EXIT")))
	node2["EMPTY"]
	node3["assert i < x"]
	node0-->|"for i in range(3)"|node3
	node0==>node1
	node3-->node2
```

## Function 6
### Source
```python
def func():
    for j in range(3):
        x = 2
    else:
        assert False
    return 1
```

### Control Flow Graph
```mermaid
flowchart TD
	node0["EMPTY"]
	node1((("EXIT")))
	node2["return 1"]
	node3["EMPTY"]
	node4["x = 2"]
	node5["assert False"]
	node0-->|"for j in range(3)"|node4
	node0-->node5
	node2==>node1
	node4-->node3
	node5==>node1
```

## Function 7
### Source
```python
def func():
    for j in range(3):
        if j == 2:
            print('yay')
            break
    else:
        assert False
    return 1
```

### Control Flow Graph
```mermaid
flowchart TD
	node0["EMPTY"]
	node1((("EXIT")))
	node2["return 1"]
	node3["EMPTY"]
	node4["EMPTY"]
	node5["assert False"]
	node6["print('yay')
break"]
	node0-->|"for j in range(3)"|node4
	node0-->node5
	node1-->node3
	node2==>node1
	node4-->|"j == 2"|node6
	node4==>node1
	node5==>node1
	node6==>node1
```
